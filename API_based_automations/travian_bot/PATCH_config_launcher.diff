--- a/API_based_automations/travian_bot/launcher.py
+++ b/API_based_automations/travian_bot/launcher.py
@@ -15,13 +15,15 @@
 from features.hero.hero_operations import run_hero_operations as run_hero_ops, print_hero_status_summary
 from features.hero.hero_raiding_thread import run_hero_raiding_thread

-# === CONFIG ===
-WAIT_BETWEEN_CYCLES_MINUTES = 10
-JITTER_MINUTES = 10
-SERVER_SELECTION = 0  # üëà update if needed
+# === CONFIG (centralized) ===
+try:
+    from config.config import settings
+except Exception:
+    # Safe fallback to hardcoded defaults if config module is missing
+    class _Fallback: pass
+    settings = _Fallback()
+    settings.WAIT_BETWEEN_CYCLES_MINUTES = 10
+    settings.JITTER_MINUTES = 10
+    settings.SERVER_SELECTION = 0  # üëà update if needed

 def view_identity():
@@ -176,7 +178,7 @@
                 else:
                     print("‚ùå Could not fetch hero status summary.")

                 # Calculate next cycle time with jitter
-                jitter = random.randint(-JITTER_MINUTES, JITTER_MINUTES)
-                total_wait_minutes = WAIT_BETWEEN_CYCLES_MINUTES + jitter
+                jitter = random.randint(-settings.JITTER_MINUTES, settings.JITTER_MINUTES)
+                total_wait_minutes = settings.WAIT_BETWEEN_CYCLES_MINUTES + jitter
                 print(f"[Main] Cycle complete. Waiting {total_wait_minutes} minutes...")
                 time.sleep(total_wait_minutes * 60)
             except Exception as e: